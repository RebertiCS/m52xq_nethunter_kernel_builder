--- a/drivers/input/touchscreen/st/fts_lib/ftsIO.c
+++ b/drivers/input/touchscreen/st/fts_lib/ftsIO.c
@@ -84,7 +84,7 @@
 	return OK;
 }
 
-struct device *getDev()
+struct device *getDev(void)
 {
 	if (client != NULL)
 		return &(client->dev);
@@ -92,7 +92,7 @@
 		return NULL;
 }
 
-struct i2c_client *getClient()
+struct i2c_client *getClient(void)
 {
 	if (client != NULL)
 		return client;
--- a/drivers/input/touchscreen/st/fts_lib/ftsTime.c
+++ b/drivers/input/touchscreen/st/fts_lib/ftsTime.c
@@ -92,7 +92,7 @@
 	return result;
 }
 
-char *timestamp()
+char *timestamp(void)
 {
 	char *result = NULL;
 
--- a/drivers/samsung/quest/sec_quest_param.c
+++ b/drivers/samsung/quest/sec_quest_param.c
@@ -106,7 +106,7 @@
 }
 
 
-void quest_print_param_quest_data()
+void quest_print_param_quest_data(void)
 {
 	QUEST_PRINT("======================\n");
 
@@ -184,7 +184,7 @@
 	QUEST_PRINT("======================\n");
 }
 
-void quest_load_param_quest_data()
+void quest_load_param_quest_data(void)
 {
 	if (!sec_get_param(param_index_quest, &param_quest_data))
 		QUEST_PRINT("%s : failed\n", __func__);
@@ -192,7 +192,7 @@
 		QUEST_PRINT("%s : succeeded\n", __func__);	
 }
 
-void quest_sync_param_quest_data()
+void quest_sync_param_quest_data(void)
 {
 	if (!sec_set_param(param_index_quest, &param_quest_data))
 		QUEST_PRINT("%s : failed\n", __func__);
@@ -226,7 +226,7 @@
 #define DDR_SCAN_CNT     0
 #endif
 
-void quest_clear_param_quest_data()
+void quest_clear_param_quest_data(void)
 {
 	param_quest_data.smd_item_result = 0;
 	param_quest_data.smd_subitem_result = 0;
@@ -291,7 +291,7 @@
 	quest_sync_param_quest_ddr_result_data();
 }
 
-void quest_initialize_curr_step()
+void quest_initialize_curr_step(void)
 {
 	param_quest_data.curr_step = STEP_NONE;
 	param_quest_data.hlos_remained_count = 0;
@@ -305,7 +305,7 @@
 }
 
 
-void quest_load_param_api_gpio_test()
+void quest_load_param_api_gpio_test(void)
 {
 	if (!sec_get_param(param_index_api_gpio_test, &param_api_gpio_test))
 		QUEST_PRINT("%s : failed\n", __func__);
@@ -313,7 +313,7 @@
 		QUEST_PRINT("%s : succeeded\n", __func__);
 }
 
-void quest_sync_param_api_gpio_test()
+void quest_sync_param_api_gpio_test(void)
 {
 	if (!sec_set_param(param_index_api_gpio_test, &param_api_gpio_test))
 		QUEST_PRINT("%s : failed\n", __func__);
@@ -321,7 +321,7 @@
 		QUEST_PRINT("%s : succeeded\n", __func__);		
 }
 
-void quest_load_param_api_gpio_test_result()
+void quest_load_param_api_gpio_test_result(void)
 {
 	if (!sec_get_param(param_index_api_gpio_test_result, param_api_gpio_test_result))
 		QUEST_PRINT("%s : failed\n", __func__);
@@ -329,7 +329,7 @@
 		QUEST_PRINT("%s : succeeded\n", __func__);
 }
 
-void quest_sync_param_api_gpio_test_result()
+void quest_sync_param_api_gpio_test_result(void)
 {
 	if (!sec_set_param(param_index_api_gpio_test_result, param_api_gpio_test_result))
 		QUEST_PRINT("%s : failed\n", __func__);
@@ -338,7 +338,7 @@
 }
 
 #ifdef CONFIG_SEC_QUEST_BPS_CLASSIFIER
-void quest_load_param_quest_bps_data()
+void quest_load_param_quest_bps_data(void)
 {
 	if (!sec_get_param(param_index_quest_bps_data, &bps_envs))
 		QUEST_PRINT("%s : failed\n", __func__);
@@ -346,7 +346,7 @@
 		QUEST_PRINT("%s : succeeded\n", __func__);
 }
 
-void quest_sync_param_quest_bps_data()
+void quest_sync_param_quest_bps_data(void)
 {
 	if (!sec_set_param(param_index_quest_bps_data, &bps_envs))
 		QUEST_PRINT("%s : failed\n", __func__);
--- a/drivers/soc/qcom/icnss2/main.c
+++ b/drivers/soc/qcom/icnss2/main.c
@@ -136,7 +136,7 @@
 	penv = priv;
 }
 
-static struct icnss_priv *icnss_get_plat_priv()
+static struct icnss_priv *icnss_get_plat_priv(void)
 {
 	return penv;
 }
--- a/techpack/camera/drivers/cam_sensor_module/cam_sensor_utils/cam_sysfs_init.c
+++ b/techpack/camera/drivers/cam_sensor_module/cam_sensor_utils/cam_sysfs_init.c
@@ -4811,7 +4811,7 @@
 	kfree(dev);
 }
 
-int svc_cheating_prevent_device_file_create()
+int svc_cheating_prevent_device_file_create(void)
 {
 	struct kernfs_node *svc_sd;
 	struct kobject *data;
--- a/techpack/camera/drivers/cam_utils/cam_debug_util.c
+++ b/techpack/camera/drivers/cam_utils/cam_debug_util.c
@@ -19,7 +19,7 @@
 
 struct camera_debug_settings cam_debug;
 
-const struct camera_debug_settings *cam_debug_get_settings()
+const struct camera_debug_settings *cam_debug_get_settings(void)
 {
 	return &cam_debug;
 }
